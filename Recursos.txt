-- Install
node --version
npm i -g @nestjs/cli
nest --version
nest --help
-- Create and run project
nest new your-name-project
cd your-name-project
npm run start
#  check http://localhost:3000/

# Crea un controlador
nest g controller {carpeta}/{nombre} --flat //Parametro --flat para no crear una subcarpeta

# Crear Servicios
nest g s {carpeta}/{nombre} --flat

# Crear un pipe
nest g pipe {carpeta}/{nombre}

# clases de validacion de datos
npm i class-validator class-transformer @nestjs/mapped-types

# creacion de modulos
nest g mo {nombre}

#Setear variables en consola con windows
Para los que usan windows y powershell una manera de setear la variable antes del comando es asÃ­:

$env:NODE_ENV = 'prod'; npm run start:dev


# Tipos de providers:

-useValue: Proveedor de Valores
-useFactory: provider fabricado de forma asincrona y tambien recibiendo una inyeccion

# Paquete para manejar variables de ambiente (posee por debajo dotenv)
npm i --save @nestjs/config

# Paquete para validacion de tipos de datos en archivos .env
npm install --save joi

# Paquetes para integrar swagger al proyecto

npm install --save @nestjs/swagger swagger-ui-express

# Levantar docker compose
docker-compose up -d
docker-compose ps
docker-compose down

# ver logs en docker
docker-compose logs -f 

# Entrar contenedor
docker-compose exec postgres bash 

# Entra a postgress por terminal
psql -h localhost -d my_db -U root

# ver relaciones 
\d+

# Salir de la bd
\q

# Ver espicificaciones del contenedor
docker inspect dd38c6813910

# Paquetes de postgress para nest
npm i pg 
npm i @types/pg -D

# Dependencias para integrar typeorm
npm install --save @nestjs/typeorm typeorm

# integrar CLI de typeorm
"typeorm": "ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",

# generar migraciones
npm run typeorm -- migration:generate -n "init"
npm run migrations:generate -- add-fields

# Ejecutar mugraciones
"migrations:run": "npm run typeorm -- migration:run"

# Muestra migraciones ejecutadas
"migrations:show": "npm run typeorm -- migration:show"
# Elimina toda las tablas de la bd
"migrations:drop": "npm run typeorm -- migration:drop"


# Configuracion de autenticacion
-- Generacion de modulo auth
nest g mo auth

-- creacion de guardian
nest g gu auth/guards/apiKey --flat


# Libreria de hashing
npm i bcrypt 

# Tipado de bcrypt
npm i @types/bcrypt -D

# Integracion de passport
npm install --save @nestjs/passport passport passport-local
npm install --save-dev @types/passport-local

#Integracion JTW
npm install --save @nestjs/jwt passport-jwt
npm install --save-dev @types/passport-jwt

#exportar datos de postgresql
pg_dump -U jcjimenez -h localhost -p 5432 -F t ticketsdb > ticketsdb.tar

# Restaurar base de datos
pg_restore -h localhost -p 5432 -d ticketsdb -U jcjimenez ticketsdb.tar


#cliente pg_dump ubuntu:
https://computingforgeeks.com/how-to-install-postgresql-13-on-ubuntu/